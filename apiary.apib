FORMAT: 1A

# LoL Improve API
LoL Improve APIARY is the documentation and mocking tool used inside the LoL Improve web application.
This is no public API, though, and CORS is not allowed, except on the mocking prototype.

## Notes

### **`current user`**
Refers to an entity representing a **logged in user**, stored in the session and known *server side*.

When an API call is based of the **current user** you don't need to provide anything in your request's body but **need to authentificate** first, though.

In the case where the request is **unauthentificated**, a **`403 Forbidden`** will be given as a response.

# Group Users
Users related resources for the **LoLImprove API**

## Users [/users]
### List all users [GET]
**\<Authentificated>** Get a list of all the users

+ Response 200 (application/json)

        [
            {
                id: 1
                avatar: "https://avatars0.githubusercontent.com/u/1383633?v=3&s=100",
                email: "support@lolimprove.com",
                password: "$2a$10$1V8eNHwClr3wcuPXwfE9G.x.e8yodjsuiJPVa9wtkJXbpwge12s32",
                name: "Diacred",
                league: "Gold V",
                role: null,
                life_points: 235,
                verified: true,
                last_request_at: "2014-11-19 10:34:02"
                created_at: "2014-11-12 18:55:18",
                updated_at: "2014-11-19 10:34:02"
            },
            {
                id: 2
                avatar: "https://avatars3.githubusercontent.com/u/9674065?v=3&s=100",
                email: "support@lolimprove.com",
                password: "$2a$10$1V8eNHwClr3wcuPXwfE9G.x.e8yodjsuiJPVa9wtkJXbpwge12s32",
                name: "Klock",
                league: "Challenger",
                role: null,
                life_points: 135,
                verified: false,
                last_request_at: "2014-11-19 10:34:02"
                created_at: "2014-11-12 18:55:18",
                updated_at: "2014-11-19 10:34:02"
            }
        ]


### Create an user [POST]
**\<Authentificated>** Creates a new user

+ Request (application/json)

        {
            avatar: "https://avatars0.githubusercontent.com/u/1383633?v=3&s=100",
            email: "support@lolimprove.com",
            password: "$2a$10$1V8eNHwClr3wcuPXwfE9G.x.e8yodjsuiJPVa9wtkJXbpwge12s32",
            name: "Diacred",
            role: null
        }

+ Response 201 (application/json)

        {
            id: 1
            avatar: "https://avatars0.githubusercontent.com/u/1383633?v=3&s=100",
            email: "support@lolimprove.com",
            password: "$2a$10$1V8eNHwClr3wcuPXwfE9G.x.e8yodjsuiJPVa9wtkJXbpwge12s32",
            name: "Diacred",
            league: "Gold V",
            role: null,
            life_points: 0,
            verified: false,
            last_request_at: "2014-11-12 18:55:18"
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:34:02"
        }

## User [/users/{id}]
An user entity and it's actions

+ Parameters
    + id (required, number) ... Numeric id of the user to retrieve
    
### Fetch an user [GET]
        
+ Response 200 (application/json)

        {
            id: 1
            avatar: "https://avatars0.githubusercontent.com/u/1383633?v=3&s=100",
            email: "support@lolimprove.com",
            password: "$2a$10$1V8eNHwClr3wcuPXwfE9G.x.e8yodjsuiJPVa9wtkJXbpwge12s32",
            name: "Diacred",
            league: "Gold V",
            role: null,
            life_points: 235,
            verified: true,
            last_request_at: "2014-11-19 10:34:02"
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:34:02"
        }
        
### Update an user [PATCH]
**\<Authentificated>** Update an user's attributes. Some attributes should not be updated through this *API* and therefore only a few can be included :
- avatar
- email
- password

When trying to update an inaccessible attribute a **Status 403** will be returned.

+ Request (application/json)

        {
            avatar: "https://avatars0.githubusercontent.com/u/1383633?v=3&s=100",
            email: "lolimprove@lolimprove.com"
        }

+ Response 200 (application/json)

        {
            id: 1
            avatar: "https://avatars0.githubusercontent.com/u/1383633?v=3&s=100",
            email: "lolimprove@lolimprove.com",
            password: "$2a$10$1V8eNHwClr3wcuPXwfE9G.x.e8yodjsuiJPVa9wtkJXbpwge12s32",
            name: "George",
            league: "Gold V",
            role: null,
            life_points: 235,
            verified: true,
            last_request_at: "2014-11-19 10:34:02"
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:34:02"
        }
       
# Group Replays
Replays related resources for the **LoLImprove API**

## Replays [/replays]
### List all Replays [GET]
+ Response 200 (application/json)

        [
            {
                id: 1
                user_id: 1,
                video_id: "QMujSbIkF8M",
                lane: "mid",
                champion: "syndra",
                matchup: "ahri",
                victory: true,
                kda: "17/4/8",
                description: "I struggled a lot during the laning phase and didn't ward at all. When and where should I had warded ?",
                duration: "25:01",
                patch: "4.19",
                replay_file: null,
                created_at: "2014-11-12 16:35:18",
                updated_at: "2014-11-12 16:35:18"
            },
            {
                id: 2
                user_id: 2,
                video_id: "QMujSbIkF8M",
                lane: "mid",
                champion: "ahri",
                matchup: "zed",
                victory: false,
                kda: "1/4/8",
                description: "I did a lot during the laning phase but didn't ward at all. When and where should I had warded ?",
                duration: "63:01",
                patch: "4.16",
                replay_file: null
                created_at: "2014-11-12 18:55:18",
                updated_at: "2014-11-19 10:34:02"
            }
        ]

### Create a Replay [POST]
**\<Authentificated>** Creates a new replay for the **current user**

+ Request (application/json)

        {
            user_id: 2,
            video_id: "QMujSbIkF8M",
            lane: "mid",
            champion: "ahri",
            matchup: "zed",
            victory: false,
            kda: "1/4/8",
            description: "I did a lot during the laning phase but didn't ward at all. When and where should I had warded ?",
            duration: "63:01",
            patch: "4.16",
            replay_file: null
        }

+ Response 201 (application/json)

        {
            id: 2
            user_id: 2,
            video_id: "QMujSbIkF8M",
            lane: "mid",
            champion: "ahri",
            matchup: "zed",
            victory: false,
            kda: "1/4/8",
            description: "I did a lot during the laning phase but didn't ward at all. When and where should I had warded ?",
            duration: "63:01",
            patch: "4.16",
            replay_file: null,
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:34:02"
        }

## Replay [/replays/{id}]
A replay entity and it's actions

+ Parameters
    + id (required, number) ... Numeric id of the replay to retrieve

### Fetch a replay [GET]
+ Response 200 (application/json)

        {
            id: 2
            user_id: 2,
            video_id: "QMujSbIkF8M",
            lane: "mid",
            champion: "ahri",
            matchup: "zed",
            victory: false,
            kda: "1/4/8",
            description: "I did a lot during the laning phase but didn't ward at all. When and where should I had warded ?",
            duration: "63:01",
            patch: "4.16",
            replay_file: null,
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:34:02"
        }

### Update a replay [PATCH]
**\<Authentificated>** Updates the **current user**'s replay

+ Request (application/json)

        {
            description: "Hello, world",
            kda: "2/4/8"
        }

+ Response 200 (application/json)

        {
            id: 2
            user_id: 2,
            video_id: "QMujSbIkF8M",
            lane: "mid",
            champion: "ahri",
            matchup: "zed",
            victory: false,
            kda: "2/4/8",
            description: "Hello, world",
            duration: "63:01",
            patch: "4.16",
            replay_file: null,
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:34:02"
        }

### Remove a Replay [DELETE]
+ Response 204

## Analyses [/replays/{id}/analyses/]

+ Parameters
    + id (required, number) ... Numeric id of the replay that holds our analyses

### List all analyses [GET]
Fetches a list of analyses, for a given replay

+ Response 200 (application/json)

        {
            id: 1,
            replay_id: 1,
            user_id: 2,
            votes: 15,
            published: true,
            general_note_id: 3,
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:39:02"
        }
        
### Create an analysis [POST]
**\<Authentificated>** Creates a new replay for the **current user**.

Only the *replay_id* and the *user_id* are needed in order to create a new unpublished analysis.

**/!\** An analysis is unique replay-user-wise. An user can only analyse a replay once. **/!\**

+ Request (application/json)

        {
            replay_id: 1,
            user_id: 2
        }
    
+ Response 200 (application/json)

        {
            id: 2,
            replay_id: 2,
            user_id: 1,
            votes: 0,
            published: false,
            general_note_id: null,
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:39:02"
        }
        

# Group Analyses 

## Publish [/analyses/{id}/publish]

+ Parameters
    + id (required, number) ... Numeric id of the analysis
    
### Publish an analysis [PATCH]
**\<Authentificated>** Publish the specified **current user**'s analysis

+ Response 200 (application/json)

        {
            id: 2,
            replay_id: 2,
            user_id: 1,
            votes: 0,
            published: true,
            general_note_id: null,
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:39:02"
        }
 
        
## Upvote [/analyses/{analysis_id}/vote]

+ Parameters
    + id (required, number) ... Numeric id of the analysis

### Upvote an analysis [PATCH]
**\<Authentificated>** Publish the specified **current user**'s analysis

+ Response 200 (application/json)

        {
            id: 2,
            replay_id: 2,
            user_id: 1,
            votes: 1,
            published: true,
            general_note_id: null,
            created_at: "2014-11-12 18:55:18",
            updated_at: "2014-11-19 10:39:02"
        }
    